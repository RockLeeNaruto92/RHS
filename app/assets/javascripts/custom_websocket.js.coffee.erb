class @ChatApp
  formatMessage: (response) =>
    if @user_id == response.user.id
      return """
        <div class="row one-chat-message">
          <div class="message-container-right">
            <div class="col-md-9 message-content-right">#{response.message.content}</div>
          </div>
        </div>
        """
    else
      return """
        <div class="row one-chat-message">
          <div class="col-md-2 one-chat-img-left">
            <%= image_tag "avatar_default.jpg", size: Settings.chat.img_size %>
          </div>
          <div class="message-container-left">
            <div class="col-md-9 message-content-left">
              #{response.message.content}
            </div>
          </div>
        </div>
        """

  formatAnnounceMessage: (response) =>
    return """
      <div class="row message-announce col-md-offset-2">
        <a class="message-announce-name">#{response.user.name}</a> #{response.message.content}
      </div>
      """

  constructor: ->
    @dispatcher = new WebSocketRails(location.host + "/websocket")
    @user_id = $("#header_wrapper").data("id")
    @initState()
    @bindEvents()
    @setListener()

  initState: ->
    console.log("<%= image_path "chat-left-arrow.png" %>")
    if @user_id == ""
      $("#message-input-field").prop 'placeholder', 'Login to chat'
      $("#message-input-field").prop 'disabled', 'true'
    else
      $("#message-input-field").prop 'placeholder', ''
      $("#message-input-field").prop 'disable', 'false'
    return

  bindEvents: ->
    @dispatcher.bind 'client_connected', @processClientConnected
    @dispatcher.bind 'client_disconnected', @processClientDisconnected
    @dispatcher.bind 'new_message', @processNewMessage

  setListener: ->
    $('#message-input-field').keyup @sendData
    $('#chat-send-btn').click @sendData
    $('#chat-dialog-btn').click @displayChatDialog

  sendData: (event) =>
    message = $("#message-input-field").val()
    if (event.keyCode == 13 and message != "") or event.type == "click"
      $("#message-input-field").val("")
      window.chatApp.dispatcher.trigger 'new_message', message
    return

  displayChatDialog: ->
    if $('#chat-info').css("bottom") == "-460px"
      $('#chat-dialog-btn').prop 'class', 'fa fa-angle-double-down'
      $('#chat-info').animate bottom: '0px'
    else
      $('#chat-dialog-btn').prop 'class', 'fa fa-angle-double-up'
      $('#chat-info').animate bottom: '-460px'

  processNewMessage: (response) =>
    if response.message.type == "new_message"
      message = @formatMessage(response)
    else
      message = @formatAnnounceMessage(response)
    @appendMessage(message)
    return

  appendMessage: (message) =>
    $("#message-input-field").prop 'placeholder', ''
    $("#message-history-chat").append message
    height = $("#message-history-chat")[0].scrollHeight + ''
    $("#message-history-chat").animate scrollTop: height
    return

  processClientConnected: (response) =>
    return

  processClientDisconnected: (response) =>
    return

$(document).ready ->
  window.chatApp = new ChatApp
